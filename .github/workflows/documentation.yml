name: Documentation

on:
  push:
    branches: [ development ]
  pull_request:
    branches: [ development ]
    if: github.event.pull_request.draft == false

jobs:
  make-documentation:
    runs-on: ubuntu-20.04
    steps:

      - name: Check out Purify
        uses: actions/checkout@v3
        #with:
        #  submodules: recursive

      - name: Install dependencies
        run: |
            sudo apt update
            sudo apt install openmpi-bin libopenmpi-dev ccache casacore-dev doxygen graphviz libeigen3-dev libspdlog-dev libtiff-dev libcfitsio-dev libbenchmark-dev libboost-all-dev libyaml-cpp-dev
            wget --no-check-certificate --no-verbose http://www.fftw.org/fftw-3.3.10.tar.gz -O- | tar --no-same-owner -xz;

      - name: Checkout Catch2
        uses: actions/checkout@v4
        with:
          repository: catchorg/Catch2.git
          path: Catch2
          ref: v3.4.0

      - name: Build Catch2
        run: |
          mkdir Catch2/build
          cd Catch2/build
          cmake .. -DBUILD_TESTING=OFF -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/local
          make -j$(nproc --ignore 1) install

      - name: Install FFTW
        run: |
          wget --no-check-certificate --no-verbose http://www.fftw.org/fftw-3.3.10.tar.gz -O- | tar --no-same-owner -xz;
          cd fftw-3.3.10
          ./configure --prefix=${{github.workspace}}/local --enable-shared
          make -j$(nproc --ignore 1) install CFLAGS=-fPIC
          # Fix bug in FFT3 (cf. https://github.com/FFTW/fftw3/issues/332)
          sed -i -e 's/^.*FFTW3LibraryDepends.cmake.*$//1' ${{github.workspace}}/local/lib*/cmake/*/FFTW3Config.cmake

      - name: Checkout SOPT
        uses: actions/checkout@v3
        with:
          repository: astro-informatics/sopt.git
          path: sopt
          ref: development

      - name: Create SOPT package
        run : |
          export CMAKE_PREFIX_PATH=${{github.workspace}}/local:$CMAKE_PREFIX_PATH
          mkdir sopt/build
          cd sopt/build
          cmake .. --fresh -DCMAKE_INSTALL_PREFIX=${PWD}/local -Ddocasa=OFF -Ddompi=OFF -Dopenmp=OFF -Ddocs=OFF -Dtests=OFF -Dexamples=OFF
          make -j$(nproc --ignore 1) install

      - name: Configure
        run: |
          export CMAKE_PREFIX_PATH=${{github.workspace}}/local:$CMAKE_PREFIX_PATH
          mkdir -p ${{github.workspace}}/build
          cd ${{github.workspace}}/build
          cmake .. --fresh -DCMAKE_INSTALL_PREFIX=${PWD}/local -Ddompi=OFF -Dopenmp=OFF -Ddocs=ON
          make -j$(nproc --ignore 1) install

      - name: Deploy to GH pages
        if: ${{github.event_name == 'push'}}
        uses: JamesIves/github-pages-deploy-action@4.1.6
        with:
          branch: gh-pages # The branch the action should deploy to.
          folder: build/cpp/docs/html # The folder the action should deploy.

